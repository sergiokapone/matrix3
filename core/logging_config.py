# logger.py
import logging

RESET = "\033[0m"
COLORS = {
    "DEBUG": "\033[36m",
    "INFO": "\033[32m",
    "WARNING": "\033[33m",
    "ERROR": "\033[31m",
    "CRITICAL": "\033[41m",
}

EMOJIS = {
    "DEBUG": "üêõ",
    "INFO": "‚úÖ",
    "WARNING": "‚ö†Ô∏è",
    "ERROR": "‚ùå",
    "CRITICAL": "üí•"
}


class ColorFormatter(logging.Formatter):
    def __init__(self, fmt=None, datefmt=None, color: str | None = None):
        """
        color: —è–∫—â–æ –∑–∞–¥–∞–Ω–æ, –≤–µ—Å—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–¥–µ –≤ —Ü—å–æ–º—É –∫–æ–ª—å–æ—Ä—ñ
        """
        super().__init__(fmt, datefmt)
        self.color = color  # None = —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ä–µ–∂–∏–º (–∫–æ–ª—å–æ—Ä–∏ —Ä—ñ–≤–Ω—ñ–≤)

    def format(self, record):
        if self.color:
            # –≤–µ—Å—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∑–∞–¥–∞–Ω–æ–º—É –∫–æ–ª—å–æ—Ä—ñ
            record.msg = f"{self.color}{record.getMessage()}{RESET}"
        else:
            # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ä–µ–∂–∏–º: –∫–æ–ª—å–æ—Ä–∏ —Ç–∞ –µ–º–æ–¥–∑—ñ –¥–ª—è —Ä—ñ–≤–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
            color = COLORS.get(record.levelname, RESET)
            emoji = EMOJIS.get(record.levelname, "")
            record.msg = f"{emoji} {record.getMessage()}"
            record.levelname = f"{color}{record.levelname}{RESET}"
        return super().format(record)


def setup_logging(
    name: str = "wp pages",
    level: str = "INFO",
    formatter: logging.Formatter | None = None
):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ª–æ–≥–µ—Ä –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –ø–µ—Ä–µ–¥–∞—Ç–∏ –∫–∞—Å—Ç–æ–º–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä"""
    logger = logging.getLogger(name)
    logger.setLevel(getattr(logging, level.upper()))

    if not logger.hasHandlers():
        handler = logging.StreamHandler()
        if formatter is None:
            # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ª–æ–≥–µ—Ä: –∫–æ–ª—å–æ—Ä–∏ —Ä—ñ–≤–Ω—è + –µ–º–æ–¥–∑—ñ
            formatter = ColorFormatter(
                "%(levelname)s | %(name)s: %(lineno)d | %(funcName)s() | %(message)s",
                datefmt="%Y-%m-%d %H:%M:%S"
            )
        handler.setFormatter(formatter)
        logger.addHandler(handler)

    return logger


def get_logger(
    name: str = "wp pages",
    level: str = "INFO",
    formatter: logging.Formatter | None = None,
    color: str | None = None
):
    """
    –û—Ç—Ä–∏–º–∞—Ç–∏ –ª–æ–≥–µ—Ä:
      - color: —è–∫—â–æ –∑–∞–¥–∞–Ω–æ, –≤–µ—Å—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–¥–µ –≤ —Ü—å–æ–º—É –∫–æ–ª—å–æ—Ä—ñ
      - formatter: –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ —Å–≤—ñ–π –∫–∞—Å—Ç–æ–º–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
      - level: —Ä—ñ–≤–µ–Ω—å –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—é
    """
    if formatter is None and color:
        formatter = ColorFormatter("%(levelname)s | %(name)s | %(message)s", color=color)

    return setup_logging(name=name, level=level, formatter=formatter)
