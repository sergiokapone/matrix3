# ============================================================================
# CLI INTERFACE
# ============================================================================

from pathlib import Path
import sys

from core.models import WordPressPage
from core.parse_index_links import parse_index_links
from core.config import AppConfig, WordPressConfig
from core.file_utils import load_yaml_data, save_wp_links_yaml
from core.html_generator import generate_discipline_page, generate_index_page
from core.logging_config import setup_logging
from core.wordpress_client import WordPressClient
from core.wordpress_uploader import upload_all_pages, upload_discipline_page, upload_index
from requests.auth import HTTPBasicAuth


config = AppConfig()

def create_wordpress_client():
    config = WordPressConfig()
    api_url = config.api_url
    auth = HTTPBasicAuth(config.username, config.password)

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    return WordPressClient(api_url=api_url, auth=auth)

client = create_wordpress_client()


def print_usage_examples():
    """–í–∏–≤–æ–¥–∏—Ç—å –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è CLI"""
    examples = [
        "üí° Usage examples:",
        "  python create_discipline_page.py data.yaml -d 'PO 01'                # Generate single discipline",
        "  python create_discipline_page.py data.yaml --all                     # Generate all disciplines",
        "  python create_discipline_page.py data.yaml --all --upload            # Generate and upload all",
        "  python create_discipline_page.py data.yaml --upload                  # Upload existing pages",
        "  python create_discipline_page.py data.yaml --index                   # Generate index page",
        "  python create_discipline_page.py data.yaml --parse-index             # Parse WP links to index",
        "  python create_discipline_page.py data.yaml --upload-index            # Upload index to WP",
        "  python create_discipline_page.py data.yaml --all --clean             # Clean before generation"
    ]
    
    print("\n".join(examples))


def parse_arguments():
    """–ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞"""
    import argparse

    parser = argparse.ArgumentParser(
        description="WordPress discipline pages generator",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog=print_usage_examples()
    )

    parser.add_argument("yaml_file", help="Path to YAML data file")
    parser.add_argument("--discipline", "-d", help="Specific discipline code")
    parser.add_argument("--template", "-t", default="discipline_template.html", help="Template file")
    parser.add_argument("--all", "-a", action="store_true", help="Generate all disciplines")
    parser.add_argument("--index", "-i", action="store_true", help="Create index page")
    parser.add_argument("--output", "-o", help="Output file or directory")
    parser.add_argument("--clean", "-c", action="store_true", help="Clean directory before generation")
    parser.add_argument("--upload-all", "-ua", action="store_true", help="Upload to WordPress")
    parser.add_argument("--parse-index", "-pi", action="store_true", help="Parse WP links to index")
    parser.add_argument("--upload-discipline", "-ud", help="Upload Discipline to WordPress")

    parser.add_argument("--upload-index", "-ui", action="store_true", help="Upload index to WordPress")
    parser.add_argument("--log-level", choices=["DEBUG", "INFO", "WARNING", "ERROR"], 
                        default="INFO", help="Logging level")

    return parser.parse_args()

def handle_single_discipline(yaml_file: str | Path, discipline_code: str):
    """CLI —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –æ–¥–Ω—ñ—î—ó –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏"""
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Path –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
    yaml_path = Path(yaml_file)
    if not yaml_path.exists():
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—â–µ–º –≤ data folder
        yaml_path = config.yaml_data_folder / yaml_file
        if not yaml_path.exists():
            raise FileNotFoundError(f"YAML file not found: {yaml_file}")
    
    output = config.output_dir / f"{discipline_code}.html"
    template_name = "discipline_template.html"

    return generate_discipline_page(
        str(yaml_path), 
        discipline_code, 
        str(output), 
        template_name
    )

def handle_all_disciplines(yaml_file: str | Path):
    """CLI —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—Å—ñ—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω –∑ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä–æ–º"""
    
    yaml_path = Path(yaml_file)
    if not yaml_path.exists():
        yaml_path = config.yaml_data_folder / yaml_file
        if not yaml_path.exists():
            raise FileNotFoundError(f"YAML file not found: {yaml_file}")
    
    # –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω
    data = load_yaml_data(yaml_path)
    if data is None:
        print("‚ùå Failed to load YAML data")
        return False
    
    all_disciplines = data.get("disciplines", {}).copy()
    if "elevative_disciplines" in data:
        all_disciplines.update(data.get("elevative_disciplines", {}))
    
    total = len(all_disciplines)
    print(f"üéØ Generating {total} disciplines from {yaml_path.name}")
    
    results = {}
    successful = 0
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ –∑ –ø—Ä–æ–≥—Ä–µ—Å–æ–º
    for i, discipline_code in enumerate(all_disciplines.keys(), 1):
        print(f"[{i}/{total}] Generating {discipline_code}...", end=" ")
        
        output_filename = config.output_dir / f"{discipline_code}.html"
        
        success = generate_discipline_page(
            str(yaml_path),
            discipline_code,
            str(output_filename)
        )
        
        results[discipline_code] = success
        
        if success:
            print("‚úÖ")
            successful += 1
        else:
            print("‚ùå")
    
    print(f"\nüìä Results: {successful}/{total} successful")
    
    return successful == total

def handle_index_page(yaml_file: str | Path):
    """CLI —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —ñ–Ω–¥–µ–∫—Å–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑—ñ —Å–ø–∏—Å–∫–æ–º –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω"""
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É
    yaml_path = Path(yaml_file)
    if not yaml_path.exists():
        yaml_path = config.yaml_data_folder / yaml_file
        if not yaml_path.exists():
            raise FileNotFoundError(f"YAML file not found: {yaml_file}")
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ —à–ª—è—Ö –¥–ª—è –≤–∏—Ö—ñ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª—É
    output_file = config.output_dir / "index.html"
    
    logger.info(f"üìÑ Generating index page from: {yaml_path}")
    logger.info(f"üìÅ Output: {output_file}")
    
    try:
        # –ì–µ–Ω–µ—Ä—É—î–º–æ —ñ–Ω–¥–µ–∫—Å–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        generate_index_page(str(yaml_path), str(output_file))
        print("‚úÖ Index page generated successfully!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Failed to generate index page: {e}")
        return False


def handle_parse_links(yaml_file: str | Path):
    """CLI —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–º—ñ–Ω–∏ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ WordPress –ø–æ—Å–∏–ª–∞–Ω–Ω—è"""
    
    if not Path(yaml_file).exists():
        yaml_file = config.yaml_data_folder / yaml_file
        if not yaml_file.exists():
            raise FileNotFoundError(f"YAML file not found: {yaml_file}")
    
    print(f"üîó Parsing WordPress links for: {config.wp_links_dir}")
    
    try:
        result = parse_index_links(str(yaml_file))
        return result
    except Exception as e:
        logger.error(f"‚ùå Failed to parse links: {e}")
        return False


def handle_upload_page(
    discipline_code: str,
    data_yaml: str | Path = None
):
    """CLI —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ –Ω–∞ WordPress"""
    
    # –Ø–∫—â–æ data_yaml –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, —à—É–∫–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ñ–∞–π–ª
    if data_yaml is None:
        logger.error("‚ùå No YAML file specified and no default file found")
        return False
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É
    yaml_path = Path(data_yaml)
    if not yaml_path.exists():
        yaml_path = config.yaml_data_folder / data_yaml
        if not yaml_path.exists():
            raise FileNotFoundError(f"YAML file not found: {data_yaml}")
    
    try:
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ YAML
        yaml_data = load_yaml_data(yaml_path)
        if not yaml_data:
            logger.erro("‚ùå Failed to load YAML data")
            return False
        
        # –û—Ç—Ä–∏–º—É—î–º–æ parent_id –∑ –º–µ—Ç–∞–¥–∞–Ω–∏—Ö
        wp_parent_id = yaml_data.get("metadata", {}).get("page_id")
        if not wp_parent_id:
            logger.error("‚ùå page_id not found in YAML metadata")
            return False
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏
        all_disciplines = {**yaml_data.get('disciplines', {}), **yaml_data.get('elevative_disciplines', {})}
        
       
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∞
        if discipline_code not in all_disciplines:
            logger.error(f"‚ùå Discipline '{discipline_code}' not found in YAML")
            logger.info(f"Available disciplines: {list(all_disciplines.keys())}")
            return False
        
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        page = upload_discipline_page(
            discipline_code=discipline_code,
            discipline_info=all_disciplines[discipline_code],
            parent_id=wp_parent_id,
            client=client
        )
        
        if page:
            logger.info(f"‚úÖ Successfully uploaded: {discipline_code}")
            logger.info(f"üìù Title: {page.title}")
            logger.info(f"üîó Link: {page.link}")
            logger.info(f"üÜî ID: {page.id}")
            return True
        else:
            logger.error(f"‚ùå Failed to upload: {discipline_code}")
            return False
            
    except Exception as e:
        logger.info(f"‚ùå Error uploading {discipline_code}: {e}")
        return False


def handle_upload_all_pages(yaml_file: str | Path) -> bool:
        """
        Handler –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω –Ω–∞ WordPress.
        
        –ê—Ä–≥—É–º–µ–Ω—Ç–∏:
            yaml_file: —à–ª—è—Ö –¥–æ YAML —Ñ–∞–π–ª—É –∑ –¥–∞–Ω–∏–º–∏ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω
            parent_id: ID –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —É WordPress
            client: —ñ–Ω—Å—Ç–∞–Ω—Å WordPressClient
            
        –ü–æ–≤–µ—Ä—Ç–∞—î:
            True —è–∫—â–æ —Ö–æ—á–∞ –± –æ–¥–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞, False —ñ–Ω–∞–∫—à–µ
        """
        yaml_path = (config.yaml_data_folder / Path(yaml_file)).resolve()
        
        # –Ø–∫—â–æ —Ñ–∞–π–ª—É –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π
        if not yaml_path.exists():
            logger.warning(f"{yaml_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—é –ø–æ—Ä–æ–∂–Ω—ñ–π YAML")
            yaml_path.write_text("disciplines: {}\nelevative_disciplines: {}\n", encoding="utf-8")
        
        try:
            wp_data = upload_all_pages(
                yaml_file=yaml_path,
                client=client
            )
            if wp_data:
                logger.info(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(wp_data)} —Å—Ç–æ—Ä—ñ–Ω–æ–∫")
                save_wp_links_yaml(wp_data, config.wp_links_dir / f'wp_links_{yaml_file}') 
                return True
            else:
                logger.warning("‚ùå –ñ–æ–¥–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–µ –±—É–ª–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
                return False
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫: {e}")
            return False
    

def handle_upload_index(yaml_file: str | Path) -> WordPressPage | None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è CLI: –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–¥–µ–∫—Å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ WordPress.

    Args:
        index_file (str | Path): –ü—É—Ç—å –∫ HTML-—Ñ–∞–π–ª—É –∏–Ω–¥–µ–∫—Å–∞.
        page_id (int): ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ WP –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        client (WordPressClient): –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ WP.

    Returns:
        WordPressPage | None: –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è/–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ.
    """
    yaml_path = config.yaml_data_folder / yaml_file
    page = upload_index(yaml_path, client)

    if page:
        logger.info(f"‚úÖ –ò–Ω–¥–µ–∫—Å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {page.title} (ID: {page.id})")
    else:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω–¥–µ–∫—Å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")

    return page


def find_default_yaml_file() -> Path | None:
    """–®—É–∫–∞—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π YAML —Ñ–∞–π–ª —É –ø–∞–ø—Ü—ñ –¥–∞–Ω–∏—Ö"""
    yaml_files = list(config.yaml_data_folder.glob("*.yaml")) + list(config.yaml_data_folder.glob("*.yml"))
    if yaml_files:
        return yaml_files[0]  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–µ—Ä—à–∏–π –∑–Ω–∞–π–¥–µ–Ω–∏–π —Ñ–∞–π–ª
    return None


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑ CLI —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"""
    try:
        args = parse_arguments()

        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
        global logger
        logger = setup_logging(args.log_level)

        # –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
        yaml_file = args.yaml_file
        
        # if not yaml_file.exists():
        #     logger.error("YAML file not found")
        #     sys.exit(1)

        # –í–∏–∫–æ–Ω—É—î–º–æ –¥—ñ—ó –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ
        executed_actions = []

        # # 1. –û—á–∏—â–µ–Ω–Ω—è (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
        # if args.clean:
        #     config = AppConfig(yaml_file=yaml_file)
        #     clean_output_directory(config.output_dir)
        #     executed_actions.append("clean")

        # 2. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–¥–Ω—ñ—î—ó –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏
        if args.discipline:
            handle_single_discipline(yaml_file, args.discipline)
            executed_actions.append(f"generate discipline {args.discipline} from {yaml_file}")

        # 3. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω
        if args.all:
            handle_all_disciplines(yaml_file)
            executed_actions.append("generate all disciplines")

        # 4. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ–Ω–¥–µ–∫—Å—É
        if args.index:
            handle_index_page(yaml_file)
            executed_actions.append("generate index")

        # 5. –ü–∞—Ä—Å–∏–Ω–≥ —ñ–Ω–¥–µ–∫—Å—É
        if args.parse_index:
            handle_parse_links(yaml_file)
            executed_actions.append("parse index links")

        # 6. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏
        if args.upload_discipline:
            handle_upload_page(args.upload_discipline, yaml_file)
            executed_actions.append("upload disciplines")

        # 7. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏
        if args.upload_all:
            handle_upload_all_pages(yaml_file)
            executed_actions.append("upload disciplines")

        # 8. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω
        if args.upload_index:
            handle_upload_index(yaml_file)
            executed_actions.append("upload index")

        # –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–æ - –ø–æ–∫–∞–∑—É—î–º–æ –¥–æ–≤—ñ–¥–∫—É
        if not executed_actions:
            logger.error("‚ùå No action specified. Use -h for help.")
            print_usage_examples()
            sys.exit(0)

        # –ó–≤—ñ—Ç –ø—Ä–æ –≤–∏–∫–æ–Ω–∞–Ω—ñ –¥—ñ—ó
        logger.info("‚úÖ Completed actions")
        logger.info(f"‚úÖ Successfully completed: {', '.join(executed_actions)}")

    except KeyboardInterrupt:
        logger.warning("Operation cancelled by user")
        logger.info("‚ö†Ô∏è  Operation cancelled by user")
        sys.exit(130)
    except Exception as e:
        logger.error(f"Failed to generate index page: {e}")
        logger.error(f"‚ùå Error: {str(e)}")
        sys.exit(1)


if __name__ == "__main__":
    main()